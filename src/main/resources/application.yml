server:
  port: 8085
  servlet:
    encoding:
      enabled: true
      charset: UTF-8
      force: true


spring:
  datasource:
    url: jdbc:mysql://10.12.251.118:3306/travel?characterEncoding=utf8&characterSetResults=utf8&autoReconnect=true&failOverReadOnly=false
    username: root
    password: Weaver#9#3
    driver-class-name: com.mysql.jdbc.Driver
    hikari:
      idle-timeout: 60000 # 连接池中连接的最大空闲时间，单位为毫秒
      maximum-pool-size: 30 # 连接池的最大连接数
      minimum-idle: 10 # 连接池的最小空闲连接数
      max-lifetime: 1800000 # 表示连接的最大生命周期为30分钟
      connection-timeout: 30000 # 连接池获取连接的最大等待时间，单位为毫秒
  application:
    name: travel_projectma
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  cache:
    type: redis
    redis:
      time-to-live: 360000 # 缓存过期时间，单位为毫秒
  redis:
    host: 127.0.0.1
    port: 6379
    password:
    database: 0
    timeout: 2000
    lettuce:
      pool:
        max-active: 8 # 连接池最大连接数
        max-wait: -1 # 连接池最大阻塞等待时间，-1表示没有限制
        max-idle: 8 # 连接池中的最大空闲连接数
        min-idle: 0 # 连接池中的最小空闲连接数
  mvc:
    # 配置Spring MVC静态资源的路径模式，表示所有以"/backend/"开头的请求都将被视为静态资源请求
    static-path-pattern: /backend/**
  web:
    resources:
      static-locations: # 配置静态资源的位置列表，可以包含多个位置
        - file:./src/main/resources/backend/
  servlet:
    multipart:
      max-file-size: 10MB # 单个文件上传的最大大小
      max-request-size: 10MB # 单个请求的最大大小,包括所有文件和表单数据

# 添加文件上传目录配置
file:
  upload-dir: ./src/main/resources/backend/upload

  flyway:
    #启用 Flyway 数据库迁移功能
    enabled: true
    #指定 SQL 脚本的存放路径为 resources/db 目录
    locations: classpath:db/migration
    #指定 SQL 文件的前缀为 V，例如 V1__init.sql
    sql-migration-prefix: V
    #指定 SQL 文件的后缀为 .sql，例如 V1__init.sql
    sql-migration-suffixes: .sql
    #如果数据库不是空表，需要设置为true，否则启动报错
    baseline-on-migrate: true
    #禁止清理数据库
    clean-disabled: true
    #指定 Flyway 历史表的名称为 flyway_schema_history
    table: flyway_schema_history

mycache:
  cache-configs:
    grade: 30s # 缓存过期时间，单位为秒
    version: 60s # 缓存版本过期时间，单位为秒

springdoc:
  api-docs:
    enabled: true
  server:
    host: "http://localhost:${server.port}"
  swagger-ui:
    doc-expansion: false
    enabled: true



#作用是配置 Spring Boot Actuator 中的管理端点，使所有的 Actuator 端点对外暴露
#  Actuator 端点：Spring Boot Actuator 提供了一系列的监控和管理端点，例如 /actuator/health（健康检查）、/actuator/info（应用信息）等。
#  include="*"：表示暴露所有可用的 Actuator 端点。如果不设置，默认只暴露少量端点（如 health 和 info）。
#  用途：便于开发和调试时查看应用的运行状态、性能指标等
management:
  endpoints:
    web:
      exposure:
        include: "*"

mybatis-plus:
  mapper-locations: classpath*:mapper/*.xml
  # xml中编写sql时不用给全路径类名
  type-aliases-package: com.weaver.accurate.**.entity
  configuration:
    # 下划线驼峰转换
    map-underscore-to-camel-case: true
    lazy-loading-enabled: true
    aggressive-lazy-loading: false


#日志配置
logging:
  level:
    root: INFO
    com.example.Accurate: DEBUG
  file:
    name: logs/travel_project.log

minio:
  #账户
  access: AKIAIOSFODNN7EXAMPLE
  #存储桶名称
  #bucket: test
  #密钥
  secret: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
  #MinIO服务器地址
  url: http://localhost:9001

user:
  home: D:\JAVA

git:
  userName: lxinet #git用户名
  password: ECdz8xwJgoH5KKnbKHU5 #git密码,这里可以配置token
  local:
    base:
      dir: D:/JAVA
  ssh:
    priKey: D:/JAVA/.ssh/id_rsa

svn:
  userName: admin
  password: 123456
  local:
    base:
      dir: ${user.home}\svn-test

maven:
  home: D:/WEAVER/Maven/apache-maven-3.8.5-2

root:
  code:
    path: src/main/java/ #代码的根目录，非标准maven项目需要自定义
jacoco:
  root:
    path: D:/jacoco/root/ #jacoco报告的根目录